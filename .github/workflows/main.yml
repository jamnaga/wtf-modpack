name: Build Artifacts and Commit

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          persist-credentials: true  # Necessario per pushare i commit

      - name: Build ZIP files from .jar files
        shell: cmd
        run: |
          @echo off
          rem ---------------------------------------------------
          rem Verifica se esistono file .jar nella directory corrente
          dir /b *.jar >nul 2>&1
          if errorlevel 1 (
              echo Nessun file .jar trovato nella directory corrente.
              exit /b 1
          )

          echo Creazione di client.zip con tutti i file .jar...
          rem Usa PowerShell per comprimere tutti i file .jar in client.zip
          powershell -command "Compress-Archive -Path '*.jar' -DestinationPath 'client.zip' -Force"
          if errorlevel 1 (
              echo Errore nella creazione di client.zip.
              exit /b 1
          )
          echo client.zip creato con successo.
          echo.

          echo Creazione di server.zip con i file .jar che non contengono "[client]" nel nome...
          setlocal enabledelayedexpansion
          set "fileList="
          for %%F in (*.jar) do (
              echo %%F | findstr /I "\[client\]" >nul
              if errorlevel 1 (
                  if "!fileList!"=="" (
                      set "fileList=%%F"
                  ) else (
                      set "fileList=!fileList!,%%F"
                  )
              )
          )

          if "!fileList!"=="" (
              echo Nessun file .jar senza "[client]" trovato. server.zip non verr√† creato.
          ) else (
              rem Costruzione del comando PowerShell per comprimere i file elencati in fileList.
              set "psCommand=Compress-Archive -LiteralPath '%fileList%' -DestinationPath 'server.zip' -Force"
              powershell -command "%psCommand%"
              if errorlevel 1 (
                  echo Errore nella creazione di server.zip.
                  exit /b 1
              )
              echo server.zip creato con successo.
          )
          endlocal
          echo Operazione completata.

      - name: Upload client.zip artifact
        uses: actions/upload-artifact@v3
        with:
          name: client-zip
          path: client.zip

      - name: Upload server.zip artifact
        if: exists('server.zip')
        uses: actions/upload-artifact@v3
        with:
          name: server-zip
          path: server.zip

      - name: Commit artifacts to repo
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Configura Git
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          # Aggiungi i file ZIP se esistono
          git add client.zip
          if [ -f server.zip ]; then
            git add server.zip
          fi

          # Controlla se ci sono cambiamenti da committare
          if git diff-index --quiet HEAD --; then
            echo "Nessun cambiamento da committare."
          else
            git commit -m "Aggiorna build artifacts [skip ci]"
            git push origin HEAD:main
          fi
